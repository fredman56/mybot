import logging
import os
import sys
import traceback

import dotenv
from rembg import new_session
from telegram import Update
from telegram import error as tg_err
from telegram.constants import StickerFormat, ChatMemberStatus
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters

# –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —ç—Ç–∏ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ —Ç–æ–π –∂–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏–ª–∏ PYTHONPATH
# –ï—Å–ª–∏ –∏—Ö –Ω–µ—Ç, –∏–º–ø–æ—Ä—Ç –≤—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–∫—É ModuleNotFoundError
try:
    from error import NoEmojiSent
    from sticker import create_new_sticker
except ImportError as e:
    print(f"[!] –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª—ã 'error.py' –∏ 'sticker.py' —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª–∞—Å—Å—ã/—Ñ—É–Ω–∫—Ü–∏–∏.")
    sys.exit(1)


dotenv.load_dotenv()


def load_env_or_exit(key: str) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å –æ—à–∏–±–∫–æ–π.
    :param key: str
    :return: str
    """
    try:
        env_value = os.environ[key]
    except KeyError:
        print(f"[!] –ó–Ω–∞—á–µ–Ω–∏–µ `{key}` –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–∫–∞–∑–∞–Ω–æ –≤ —Ñ–∞–π–ª–µ `.env`.")
        sys.exit(1)
    else:
        return env_value


BOT_TOKEN = load_env_or_exit("BOT_TOKEN")
BOT_NAME = load_env_or_exit("BOT_NAME")
REMBG_AI_MODEL = load_env_or_exit("REMBG_AI_MODEL")
# –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –°–¢–†–û–ö–ê: –£–∫–∞–∑–∞–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –∫–ª—é—á–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
CHANNEL_ID = load_env_or_exit("-1002348515440")  # ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏

HELP_TEXT = """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é üëã

–≠—Ç–æ –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–æ–≤.
–û–Ω –≤—ã—Ä–µ–∑–∞–µ—Ç —Ñ–æ–Ω –∏ —Å–æ–∑–¥–∞–µ—Ç —Å—Ç–∏–∫–µ—Ä—ã –∏–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –µ–º—É –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ.

–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.

–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Å—Ç–∏–∫–µ—Ä –∏–∑ —Ñ–æ—Ç–∫–∏, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–¥–µ–ª–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã—Ö —à–∞–≥–æ–≤:
1) –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.
2) –í –ø–æ–¥–ø–∏—Å–∏ –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ—Å—Ç–∞–≤—å—Ç–µ –∫–∞–∫ –º–∏–Ω–∏–º—É–º –æ–¥–∏–Ω —ç–º–æ–¥–∑–∏, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∞—Å—Å–æ—Ü–∏–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å —ç—Ç–∏–º —Å—Ç–∏–∫–µ—Ä–æ–º (–º–æ–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —à—Ç—É–∫ –ø–æ–¥—Ä—è–¥).
3) –î–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞ –æ—Ç –±–æ—Ç–∞ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç–∏–∫–µ—Ä–∞ –≤ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫*.

* –î–ª—è –≤–∞—Å –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –æ–¥–∏–Ω —Å—Ç–∏–∫–µ—Ä–ø–∞–∫, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –±–æ—Ç–æ–º —Å—Ç–∏–∫–µ—Ä—ã.
–í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–∞ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –∫–æ–º–∞–Ω–¥–æ–π /delete_sticker_pack.
"""

# –ò—Å–ø–æ–ª—å–∑—É–µ–º user.id –≤–º–µ—Å—Ç–æ user.username –¥–ª—è –±–æ–ª—å—à–µ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
STICKER_SET_NAME_TMPL = f"for_{{0}}_by_{BOT_NAME}"
DEFAULT_STICKER_SET_TITLE = f"Stickers from @{BOT_NAME}"


logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)
# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –±–æ—Ç–∞ –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –ª–æ–≥–∞
try:
    logger.addHandler(logging.FileHandler("sticker_bot.log", mode="a", encoding="utf-8"))
except FileNotFoundError:
    print("[!] –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª –ª–æ–≥–∞ 'sticker_bot.log'. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.")
    # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ñ–∞–π–ª, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å
    pass


async def check_subscription(user_id: int, bot) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param bot: —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
    :return: True –µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω, False –µ—Å–ª–∏ –Ω–µ—Ç
    """
    try:
        # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ CHANNEL_ID —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ —á–∏—Å–ª–æ (ID)
        chat_id_to_check = int(CHANNEL_ID)
        member = await bot.get_chat_member(chat_id=chat_id_to_check, user_id=user_id)
        return member.status in [
            ChatMemberStatus.MEMBER,
            ChatMemberStatus.ADMINISTRATOR,
            ChatMemberStatus.CREATOR
        ]
    except ValueError:
        logger.error(f"–û—à–∏–±–∫–∞: CHANNEL_ID ('{CHANNEL_ID}') –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º. –£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π ID –∫–∞–Ω–∞–ª–∞ –≤ .env")
        return False # –ù–µ –º–æ–∂–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å–ª–∏ ID –Ω–µ —á–∏—Å–ª–æ
    except tg_err.BadRequest as e:
        # –ß–∞—Å—Ç–∞—è –æ—à–∏–±–∫–∞ - –±–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º –≤ –∫–∞–Ω–∞–ª–µ –∏–ª–∏ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π ID
        logger.error(f"–û—à–∏–±–∫–∞ BadRequest –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ user_id={user_id} –Ω–∞ channel_id={CHANNEL_ID}: {e}. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏ ID –∫–∞–Ω–∞–ª–∞ –≤–µ—Ä–Ω—ã–π.")
        return False
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ user_id={user_id} –Ω–∞ channel_id={CHANNEL_ID}: {e}\n{traceback.format_exc()}")
        return False


async def restricted_handler(handler_func, update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ—Å—Ç—å —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if not update.message or not update.message.from_user:
        return

    user = update.message.from_user
    is_subscribed = await check_subscription(user.id, context.bot)

    if not is_subscribed:
        channel_link = CHANNEL_ID # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º ID
        try:
             # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å username, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –∏ ID —á–∏—Å–ª–æ–≤–æ–π
             chat = await context.bot.get_chat(int(CHANNEL_ID))
             if chat.username:
                 channel_link = f"@{chat.username}" # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É —Å @username
             else:
                 # –ï—Å–ª–∏ username –Ω–µ—Ç, –Ω–æ –µ—Å—Ç—å –∏–Ω–≤–∞–π—Ç —Å—Å—ã–ª–∫–∞ (–¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤)
                 if chat.invite_link:
                     channel_link = chat.invite_link # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω–≤–∞–π—Ç —Å—Å—ã–ª–∫—É
                 else: # –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏ username –Ω–∏ –∏–Ω–≤–∞–π—Ç —Å—Å—ã–ª–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º ID
                     channel_link = f"–∫–∞–Ω–∞–ª —Å ID {CHANNEL_ID}" # –£—Ç–æ—á–Ω—è–µ–º, —á—Ç–æ —ç—Ç–æ ID
        except ValueError:
             logger.warning(f"CHANNEL_ID ('{CHANNEL_ID}') –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º, –Ω–µ–ª—å–∑—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ –ø–æ ID.")
             # –ú–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ username, –µ—Å–ª–∏ –æ–Ω –∑–∞–¥–∞–Ω —Ç–∞–∫ –≤ .env
             if not CHANNEL_ID.startswith('-'): # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —ç—Ç–æ username, –µ—Å–ª–∏ –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –º–∏–Ω—É—Å–∞
                 channel_link = f"@{CHANNEL_ID}"
             else:
                 channel_link = f"–∫–∞–Ω–∞–ª —Å ID {CHANNEL_ID}" # –ò–Ω–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º ID
        except Exception as e:
             logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ {CHANNEL_ID} –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ: {e}")
             channel_link = f"–∫–∞–Ω–∞–ª —Å ID {CHANNEL_ID}" # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ ID –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ (—Å—Å—ã–ª–∫—É –∏–ª–∏ ID)
        if channel_link.startswith("https://") or channel_link.startswith("@"):
             subscribe_message = f"–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∑–¥–µ—Å—å: {channel_link}\n"
        else: # –ï—Å–ª–∏ —ç—Ç–æ ID –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
             subscribe_message = f"–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ {channel_link}.\n"


        await update.message.reply_text(
            "‚ùå –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.\n"
            f"{subscribe_message}"
            "–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞."
        )
        return

    # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –µ—Å—Ç—å, –≤—ã–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    await handler_func(update, context)


async def help_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(HELP_TEXT)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
    """
     # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ—Å—Ç—å —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if not update.message or not update.message.from_user:
        return

    user = update.message.from_user
    is_subscribed = await check_subscription(user.id, context.bot)

    if not is_subscribed:
        channel_link = CHANNEL_ID # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º ID
        try:
             chat = await context.bot.get_chat(int(CHANNEL_ID))
             if chat.username:
                 channel_link = f"@{chat.username}"
             elif chat.invite_link:
                 channel_link = chat.invite_link
             else:
                 channel_link = f"–∫–∞–Ω–∞–ª —Å ID {CHANNEL_ID}"
        except ValueError:
             logger.warning(f"CHANNEL_ID ('{CHANNEL_ID}') –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º, –Ω–µ–ª—å–∑—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ –ø–æ ID –¥–ª—è /start.")
             if not CHANNEL_ID.startswith('-'):
                 channel_link = f"@{CHANNEL_ID}"
             else:
                 channel_link = f"–∫–∞–Ω–∞–ª —Å ID {CHANNEL_ID}"
        except Exception as e:
             logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ {CHANNEL_ID} –¥–ª—è /start: {e}")
             channel_link = f"–∫–∞–Ω–∞–ª —Å ID {CHANNEL_ID}"

        if channel_link.startswith("https://") or channel_link.startswith("@"):
             subscribe_message = f"–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∑–¥–µ—Å—å: {channel_link}\n"
        else:
             subscribe_message = f"–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ {channel_link}.\n"

        await update.message.reply_text(
            "–ü—Ä–∏–≤–µ—Ç! –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.\n"
            f"{subscribe_message}"
            "–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ /start —Å–Ω–æ–≤–∞."
        )
        return

    # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø—Ä–∞–≤–∫—É
    await help_message(update, context)


async def add_sticker(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
     # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ—Å—Ç—å —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if not update.message or not update.message.from_user:
        return
    user = update.message.from_user

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ—Å—Å–∏—é rembg
    if context.bot_data.get("performance_mode", False) and 'rembg_session' in context.bot_data:
        rembg_session = context.bot_data['rembg_session']
    else:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞, –µ—Å–ª–∏ –Ω–µ –≤ performance_mode –∏–ª–∏ —Å–µ—Å—Å–∏–∏ –Ω–µ—Ç
        try:
            rembg_session = new_session(REMBG_AI_MODEL)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Å—Å–∏–∏ rembg: {e}\n{traceback.format_exc()}")
            await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ (rembg), –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            return

    try:
        # –°–æ–∑–¥–∞–µ–º —Å—Ç–∏–∫–µ—Ä (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç, —á—Ç–æ sticker.py –∏ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∏ —Ä–∞–±–æ—Ç–∞—é—Ç)
        new_sticker = await create_new_sticker(update, rembg_session)
        if new_sticker is None: # –î–æ–±–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫—É, –µ—Å–ª–∏ create_new_sticker –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å None
            logger.error("create_new_sticker –≤–µ—Ä–Ω—É–ª–∞ None")
            await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Ç–∏–∫–µ—Ä –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
            return

    except NoEmojiSent:
        await update.message.reply_text("‚ùå –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç–º–æ–¥–∑–∏ –≤–º–µ—Å—Ç–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –≤ –ø–æ–¥–ø–∏—Å–∏, —á—Ç–æ–±—ã –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –µ–≥–æ –∫ —Å—Ç–∏–∫–µ—Ä—É.")
        return # –í–∞–∂–Ω–æ –≤—ã–π—Ç–∏ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–¥–µ—Å—å
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é –æ—à–∏–±–∫—É —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∏–∫–µ—Ä–∞
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ create_new_sticker.\n{traceback.format_exc()}")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–±—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await update.message.reply_text("‚ùå –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.")
        return # –í–∞–∂–Ω–æ –≤—ã–π—Ç–∏ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–¥–µ—Å—å

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º user.id –¥–ª—è –∏–º–µ–Ω–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞
    sticker_set_name = STICKER_SET_NAME_TMPL.format(user.id)
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç–∏–∫–µ—Ä –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –Ω–∞–±–æ—Ä
        await context.bot.add_sticker_to_set(user_id=user.id, name=sticker_set_name, sticker=new_sticker)
        logger.info(f"–°—Ç–∏–∫–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–∞–∫ {sticker_set_name} –¥–ª—è user_id {user.id}")

    except tg_err.BadRequest as err:
        # –ï—Å–ª–∏ –Ω–∞–±–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω (—Å–∞–º–∞—è —á–∞—Å—Ç–∞—è –æ—à–∏–±–∫–∞ BadRequest –∑–¥–µ—Å—å)
        if "Stickerset_invalid" in str(err) or "STICKERSET_INVALID" in str(err):
            logger.info(f"–°—Ç–∏–∫–µ—Ä–ø–∞–∫ {sticker_set_name} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è user_id {user.id}. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π.")
            # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –Ω–∞–±–æ—Ä —Å—Ç–∏–∫–µ—Ä–æ–≤
            await _create_new_sticker_set(update, context, sticker_set_name, new_sticker)
        else:
            # –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ BadRequest –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ BadRequest –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç–∏–∫–µ—Ä–∞ –≤ {sticker_set_name}: {err}\n{traceback.format_exc()}")
            await update.message.reply_text("‚ùå –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç–∏–∫–µ—Ä–∞ –≤ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ (1), –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except Exception as e:
        # –î—Ä—É–≥–∞—è (–Ω–µ BadRequest) –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
        logger.error(f"[!] –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç–∏–∫–µ—Ä–∞ –≤ {sticker_set_name}: {e}\n{traceback.format_exc()}")
        await update.message.reply_text("‚ùå –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç–∏–∫–µ—Ä–∞ –≤ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ (2), –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    else:
        # –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–∞–∫ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
        await update.message.reply_text("‚úÖ –°—Ç–∏–∫–µ—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞—à —Å—Ç–∏–∫–µ—Ä–ø–∞–∫.\n"
                                        f"https://t.me/addstickers/{sticker_set_name}")


async def delete_sticker_set(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ—Å—Ç—å —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if not update.message or not update.message.from_user:
        return
    user = update.message.from_user
    sticker_set_name = STICKER_SET_NAME_TMPL.format(user.id)
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å –Ω–∞–±–æ—Ä —Å—Ç–∏–∫–µ—Ä–æ–≤
        success = await context.bot.delete_sticker_set(name=sticker_set_name)
    except tg_err.BadRequest as err:
         # –ï—Å–ª–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω - —ç—Ç–æ —Ç–æ–∂–µ —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∞ —É—Å–ø–µ—Ö (–µ–≥–æ –Ω–µ—Ç)
         if "Stickerset_invalid" in str(err) or "STICKERSET_INVALID" in str(err):
             logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ {sticker_set_name} user_id {user.id}")
             await update.message.reply_text("‚ÑπÔ∏è –í–∞—à —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ —É–¥–∞–ª–µ–Ω).")
             return # –í—ã—Ö–æ–¥–∏–º, —Ç.–∫. —É–¥–∞–ª—è—Ç—å –Ω–µ—á–µ–≥–æ
         else:
             logger.error(f"‚ùå –û—à–∏–±–∫–∞ BadRequest –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ {sticker_set_name}: {err}\n{traceback.format_exc()}")
             success = False # –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞ –Ω–µ—É—Å–ø–µ—Ö
    except Exception as e:
        logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ {sticker_set_name}: {e}\n{traceback.format_exc()}")
        success = False

    # –°–æ–æ–±—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if success:
        logger.info(f"–°—Ç–∏–∫–µ—Ä–ø–∞–∫ {sticker_set_name} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –¥–ª—è user_id {user.id}")
        await update.message.reply_text("‚úÖ –°—Ç–∏–∫–µ—Ä–ø–∞–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")
    else:
        # –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ, –µ—Å–ª–∏ success –æ—Å—Ç–∞–ª—Å—è False –ø–æ—Å–ª–µ –±–ª–æ–∫–∞ try/except
         await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç–∏–∫–µ—Ä–ø–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —É–¥–∞–ª–∏—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ @Stickers.")


async def get_user_sticker_set_link(update: Update, context: ContextTypes.DEFAULT_TYPE):
     # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ—Å—Ç—å —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if not update.message or not update.message.from_user:
        return
    user = update.message.from_user
    sticker_set_name = STICKER_SET_NAME_TMPL.format(user.id)
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫, —á—Ç–æ–±—ã –¥–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
        await context.bot.get_sticker_set(name=sticker_set_name)
        # –ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É
        await update.message.reply_text(f"–í–∞—à —Å—Ç–∏–∫–µ—Ä–ø–∞–∫: https://t.me/addstickers/{sticker_set_name}")
    except tg_err.BadRequest as err:
         # –ï—Å–ª–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω
         if "Stickerset_invalid" in str(err) or "STICKERSET_INVALID" in str(err):
             await update.message.reply_text("‚ùå –£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å —ç–º–æ–¥–∑–∏ –≤ –ø–æ–¥–ø–∏—Å–∏, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ.")
         else:
             # –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ BadRequest
             logger.error(f"‚ùå –û—à–∏–±–∫–∞ BadRequest –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ {sticker_set_name}: {err}\n{traceback.format_exc()}")
             await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–µ.")
    except Exception as e:
        # –î—Ä—É–≥–∞—è –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞
        logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ {sticker_set_name}: {e}\n{traceback.format_exc()}")
        await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤–∞—à–µ–≥–æ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞.")


# –ü–µ—Ä–µ–¥–∞–µ–º context –≤ _create_new_sticker_set –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –æ–Ω –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è
async def _create_new_sticker_set(update: Update, context: ContextTypes.DEFAULT_TYPE, sticker_set_name, first_sticker):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ—Å—Ç—å —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if not update.message or not update.message.from_user:
        return
    user = update.message.from_user
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º context.bot –≤–º–µ—Å—Ç–æ update.get_bot() (—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ –≤ PTB v20+)
        # –ü–µ—Ä–µ–¥–∞–µ–º user_id=user.id –∏ name=sticker_set_name
        await context.bot.create_new_sticker_set(user_id=user.id,
                                                 name=sticker_set_name,
                                                 title=DEFAULT_STICKER_SET_TITLE,
                                                 sticker=first_sticker, # –ò—Å–ø–æ–ª—å–∑—É–µ–º sticker= –≤–º–µ—Å—Ç–æ stickers=
                                                 sticker_format=StickerFormat.STATIC)
        logger.info(f"–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ {sticker_set_name} –¥–ª—è user_id {user.id}")
    except tg_err.BadRequest as err:
        # –í–æ–∑–º–æ–∂–Ω–∞—è –æ—à–∏–±–∫–∞ - –∏–º—è —É–∂–µ –∑–∞–Ω—è—Ç–æ (–º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ –∏–∑-–∑–∞ user.id, –Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–∏ –≥–æ–Ω–∫–∞—Ö)
        if "sticker set name is already occupied" in str(err).lower():
             logger.warning(f"–ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ {sticker_set_name} (–≤–æ–∑–º–æ–∂–Ω–æ, –≥–æ–Ω–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤).")
             # –°—á–∏—Ç–∞–µ–º, —á—Ç–æ –ø–∞–∫ —É–∂–µ –µ—Å—Ç—å, –ø—Ä–æ—Å—Ç–æ —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
             await update.message.reply_text(f"‚úÖ –°—Ç–∏–∫–µ—Ä–ø–∞–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å—Ç–∏–∫–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω.\n"
                                           f"https://t.me/addstickers/{sticker_set_name}")
             # –ú–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Ä–∞–∑ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, –Ω–æ —ç—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å —Ü–∏–∫–ª
        elif "USER_IS_BOT" in str(err):
             logger.error(f"–û—à–∏–±–∫–∞ USER_IS_BOT –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ {sticker_set_name}. –ë–æ—Ç—ã –Ω–µ –º–æ–≥—É—Ç –≤–ª–∞–¥–µ—Ç—å —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞–º–∏.")
             # –≠—Ç–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
             await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞: –±–æ—Ç—ã –Ω–µ –º–æ–≥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∏.")
        else:
            # –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ BadRequest –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ BadRequest –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ {sticker_set_name}: {err}\n{traceback.format_exc()}")
            await update.message.reply_text("‚ùå –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ (1), –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except Exception as e:
        # –î—Ä—É–≥–∞—è –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
        logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ {sticker_set_name}: {e}\n{traceback.format_exc()}")
        await update.message.reply_text("‚ùå –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫–∞ (2), –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    else:
        # –ï—Å–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
        await update.message.reply_text(f"‚úÖ –í–∞—à –Ω–æ–≤—ã–π —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ —Å–æ–∑–¥–∞–Ω! –ú–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ —Å–µ–±–µ –ø–æ —Å—Å—ã–ª–∫–µ:\n"
                                      f"https://t.me/addstickers/{sticker_set_name}")


async def _init_persistent_rembg_session(app: Application):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ rembg –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞."""
    try:
        app.bot_data['rembg_session'] = new_session(REMBG_AI_MODEL)
        app.bot_data['performance_mode'] = True
        logger.info(f"–ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–∞ —Å–µ—Å—Å–∏—è rembg (–º–æ–¥–µ–ª—å: {REMBG_AI_MODEL}) –≤ —Ä–µ–∂–∏–º–µ performance_mode.")
    except Exception as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Å—Å–∏—é rembg: {e}\n{traceback.format_exc()}")
        app.bot_data['performance_mode'] = False # –û—Ç–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º, –µ—Å–ª–∏ —Å–µ—Å—Å–∏—è –Ω–µ —Å–æ–∑–¥–∞–ª–∞—Å—å


def start_bot():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞."""
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        handlers=[
            logging.StreamHandler(sys.stdout) # –í—ã–≤–æ–¥ –ª–æ–≥–æ–≤ –≤ –∫–æ–Ω—Å–æ–ª—å
        ]
    )
    # –î–æ–±–∞–≤–ª—è–µ–º —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –æ–Ω –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —Ä–∞–Ω–µ–µ
    if any(isinstance(h, logging.FileHandler) for h in logger.handlers):
        pass # –£–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω
    elif os.access(os.path.dirname("sticker_bot.log") or '.', os.W_OK): # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –µ—â–µ —Ä–∞–∑
         try:
            file_handler = logging.FileHandler("sticker_bot.log", mode="a", encoding="utf-8")
            formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
            file_handler.setFormatter(formatter)
            logger.addHandler(file_handler) # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª–æ–≤—ã–π –ª–æ–≥–≥–µ—Ä
            logging.getLogger().addHandler(file_handler) # –î–æ–±–∞–≤–ª—è–µ–º –∏ –≤ root –ª–æ–≥–≥–µ—Ä
            logger.info("–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª sticker_bot.log –≤–∫–ª—é—á–µ–Ω–æ.")
         except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª 'sticker_bot.log': {e}")
    else:
        logger.warning("–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –¥–ª—è sticker_bot.log, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Å–æ–ª—å.")


    logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Telegram...")
    try:
        # –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        builder = Application.builder().token(BOT_TOKEN)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –¥–ª—è performance_mode
        if len(sys.argv) == 2 and sys.argv[1] == "--performance-mode":
            logger.info("–ê–∫—Ç–∏–≤–∞—Ü–∏—è performance_mode —á–µ—Ä–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.")
            builder.post_init(_init_persistent_rembg_session)
        else:
            logger.info("–ó–∞–ø—É—Å–∫ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ (—Å–µ—Å—Å–∏—è rembg —Å–æ–∑–¥–∞–µ—Ç—Å—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞).")

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        bot_app = builder.build()

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        # /start –∏–º–µ–µ—Ç —Å–≤–æ—é –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ –≤–Ω—É—Ç—Ä–∏
        bot_app.add_handler(CommandHandler("start", start))
        # –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ restricted_handler
        bot_app.add_handler(CommandHandler("help", lambda u, c: restricted_handler(help_message, u, c)))
        bot_app.add_handler(CommandHandler("sticker_pack_link", lambda u, c: restricted_handler(get_user_sticker_set_link, u, c)))
        bot_app.add_handler(CommandHandler("delete_sticker_pack", lambda u, c: restricted_handler(delete_sticker_set, u, c)))
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ —Ç–∞–∫–∂–µ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º
        bot_app.add_handler(MessageHandler(filters.PHOTO & filters.ChatType.PRIVATE, lambda u, c: restricted_handler(add_sticker, u, c)))

        logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (polling)...")
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        bot_app.run_polling()

    except Exception as e:
         logger.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}\n{traceback.format_exc()}")
         sys.exit("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞.")

    logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")


if __name__ == "__main__":
    start_bot()
